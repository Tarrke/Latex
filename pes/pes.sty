%%%
%%% Package Doc Dauphine : permet la gestion des procédures d'exploitation de sécurité de la PSSI de l'Université
%%% Réalisé par : JC Gay
%%% Version : 0.2
%%% Mise à jour le 22/05/2012
%%%

%%% 26/06/2012 : ajout de la gestion des tables des matièreq /*\
%%% 23/05/2012 : ajout de compteurs automatiques pour les différentes types de règles
%%% 22/05/2012 : inclure le sty de docDauphine, les PES sont des Documents pour Dauphine
%%% 15/03/2012 : première version du style

%%% /*\ : gestion particulière de la table des matières :
%%% Du à l'utilisation particulière des fichiers dans les différentes parties de la PSSI
%%% la table des matières doit être gérée de manière différente dans les PES suivant si la
%%% PES est inclue dans le PSSI ou créée toute seule.
% il faut un booléen qui soit false ou true en fonction de l'extention chargée et une redéfinition
% des subsubsection* et des subsection* pour les faire apparaitre ou non dans la toc
\makeatletter
\newif\if@pesstyle	
\@pesstyletrue

\newcommand{\mysubsection}[1]{ 	
  \if@pesstyle
    \section*{#1}
    \addcontentsline{toc}{section}{#1}
  \else
    \subsection*{#1}
  \fi
}

\newcommand{\mysubsubsection}[1]{ 	
  \if@pesstyle
    \subsection*{#1}
    \addcontentsline{toc}{subsection}{#1}
  \else
    \subsubsection*{#1}
  \fi
}

\newcommand{\pesstyle}{\@pesstyletrue}
\newcommand{\notpesstyle}{\@pesstylefalse}

\makeatother

\NeedsTeXFormat{LaTeX2e}                 %
\ProvidesPackage{pes}[20120315]          %

%%% Chargement des extensions
\RequirePackage{docDauphine}

%%% Fonction permettant de définir les TAGs
\makeatletter
\newcommand{\TAG}{Article}

\newcommand{\setArticleTag}[1]{
  \renewcommand{\TAG}{#1}
  \ifcsname c@#1\endcsname\else
  \newcounter{#1}\fi
}

\newcommand{\incTAG}[1]{
  \stepcounter{#1}
}

\makeatother

%%% Style personalisé pour l'affichage des différents articles d'une PES :
\makeatletter

\newcommand{\article}[1]{
\stepcounter{\TAG}
\par
\noindent \textbf{\TAG{}-\arabic{\TAG} -- #1}
\par
}

\makeatother

%%% Modification du parskip pour les itemize :
\makeatletter
\let\orig@Itemize =\itemize %prevent infinite loop
% Zero the vertical spacing parameters
\def\Nospacing{\itemsep=0pt\topsep=0pt\partopsep=0pt\parskip=0pt\parsep=0pt}

\newcommand{\newItemize}{\renewenvironment{itemize}{\Nospacing\orig@Itemize}{\endlist}}

\newcommand{\oldItemize}{\renewenvironment{itemize}{\orig@Itemize}{\endlist}}

\makeatother

%%% Par défaut on utilise les nouveaux itemize :
\newItemize

\endinput % fin du package